"use strict";
var converter = require('./utils/converter');
/**
 * Represents a fixed size byte array.
 */
var ByteArray = /** @class */ (function () {
    /**
     * Creates a byte array.
     * @param {number} fixedSize Size of the array.
     * @param {Uint8Array|string} arrayInput Byte array or hex string.
     */
    function ByteArray(fixedSize, arrayInput) {
        var rawBytes = arrayInput;
        if ('string' === typeof rawBytes)
            rawBytes = converter.hexToUint8(rawBytes);
        if (fixedSize !== rawBytes.length)
            throw RangeError("bytes was size ".concat(rawBytes.length, " but must be ").concat(fixedSize));
        this.bytes = new Uint8Array(rawBytes);
    }
    /**
     * Returns string representation of this object.
     * @returns {string} String representation of this object
     */
    ByteArray.prototype.toString = function () {
        return converter.uint8ToHex(this.bytes);
    };
    return ByteArray;
}());
module.exports = { ByteArray: ByteArray };
