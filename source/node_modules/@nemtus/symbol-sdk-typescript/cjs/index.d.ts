import { BaseValue } from "./BaseValue";
import { Bip32 } from "./Bip32";
import { ByteArray } from "./ByteArray";
import CryptoTypes = require("./CryptoTypes");
import { NetworkLocator } from "./Network";
import SymbolFacade = require("./facade/SymbolFacade");
import NemFacade = require("./facade/NemFacade");
import NemTransactionFactory = require("./nem/TransactionFactory");
import NemNetwork = require("./nem/Network");
import NemKeyPair = require("./nem/KeyPair");
import NemModels = require("./nem/models");
import SymbolTransactionFactory = require("./symbol/TransactionFactory");
import SymbolNetwork = require("./symbol/Network");
import SymbolMerkleHashBuilder = require("./symbol/MerkleHashBuilder");
import SymbolKeyPair = require("./symbol/KeyPair");
import SymbolModels = require("./symbol/models");
import { hexToUint8 } from "./utils/converter";
import { uint8ToHex } from "./utils/converter";
export declare const facade: {
    SymbolFacade: typeof SymbolFacade.SymbolFacade;
    NemFacade: typeof NemFacade.NemFacade;
};
export declare const nem: {
    TransactionFactory: typeof NemTransactionFactory.TransactionFactory;
    Address: typeof NemNetwork.Address;
    Network: typeof NemNetwork.Network;
    NetworkTimestamp: typeof NemNetwork.NetworkTimestamp;
    KeyPair: typeof NemKeyPair.KeyPair;
    Verifier: typeof NemKeyPair.Verifier;
    Amount: typeof NemModels.Amount;
    Height: typeof NemModels.Height;
    Timestamp: typeof NemModels.Timestamp;
    Hash256: typeof NemModels.Hash256;
    PublicKey: typeof NemModels.PublicKey;
    Signature: typeof NemModels.Signature;
    NetworkType: typeof NemModels.NetworkType;
    TransactionType: typeof NemModels.TransactionType;
    Transaction: typeof NemModels.Transaction;
    NonVerifiableTransaction: typeof NemModels.NonVerifiableTransaction;
    LinkAction: typeof NemModels.LinkAction;
    AccountKeyLinkTransaction: typeof NemModels.AccountKeyLinkTransaction;
    NonVerifiableAccountKeyLinkTransaction: typeof NemModels.NonVerifiableAccountKeyLinkTransaction;
    NamespaceId: typeof NemModels.NamespaceId;
    MosaicId: typeof NemModels.MosaicId;
    Mosaic: typeof NemModels.Mosaic;
    SizePrefixedMosaic: typeof NemModels.SizePrefixedMosaic;
    MosaicTransferFeeType: typeof NemModels.MosaicTransferFeeType;
    MosaicLevy: typeof NemModels.MosaicLevy;
    MosaicProperty: typeof NemModels.MosaicProperty;
    SizePrefixedMosaicProperty: typeof NemModels.SizePrefixedMosaicProperty;
    MosaicDefinition: typeof NemModels.MosaicDefinition;
    MosaicDefinitionTransaction: typeof NemModels.MosaicDefinitionTransaction;
    NonVerifiableMosaicDefinitionTransaction: typeof NemModels.NonVerifiableMosaicDefinitionTransaction;
    MosaicSupplyChangeAction: typeof NemModels.MosaicSupplyChangeAction;
    MosaicSupplyChangeTransaction: typeof NemModels.MosaicSupplyChangeTransaction;
    NonVerifiableMosaicSupplyChangeTransaction: typeof NemModels.NonVerifiableMosaicSupplyChangeTransaction;
    MultisigAccountModificationType: typeof NemModels.MultisigAccountModificationType;
    MultisigAccountModification: typeof NemModels.MultisigAccountModification;
    SizePrefixedMultisigAccountModification: typeof NemModels.SizePrefixedMultisigAccountModification;
    MultisigAccountModificationTransactionV1: typeof NemModels.MultisigAccountModificationTransactionV1;
    NonVerifiableMultisigAccountModificationTransactionV1: typeof NemModels.NonVerifiableMultisigAccountModificationTransactionV1;
    MultisigAccountModificationTransaction: typeof NemModels.MultisigAccountModificationTransaction;
    NonVerifiableMultisigAccountModificationTransaction: typeof NemModels.NonVerifiableMultisigAccountModificationTransaction;
    Cosignature: typeof NemModels.Cosignature;
    SizePrefixedCosignature: typeof NemModels.SizePrefixedCosignature;
    MultisigTransaction: typeof NemModels.MultisigTransaction;
    NamespaceRegistrationTransaction: typeof NemModels.NamespaceRegistrationTransaction;
    NonVerifiableNamespaceRegistrationTransaction: typeof NemModels.NonVerifiableNamespaceRegistrationTransaction;
    MessageType: typeof NemModels.MessageType;
    Message: typeof NemModels.Message;
    TransferTransactionV1: typeof NemModels.TransferTransactionV1;
    NonVerifiableTransferTransactionV1: typeof NemModels.NonVerifiableTransferTransactionV1;
    TransferTransaction: typeof NemModels.TransferTransaction;
    NonVerifiableTransferTransaction: typeof NemModels.NonVerifiableTransferTransaction;
    NonVerifiableTransactionFactory: typeof NemModels.NonVerifiableTransactionFactory;
};
export declare const symbol: {
    generateMosaicId: (ownerAddress: Address, nonce: number) => BigInt;
    generateNamespaceId: (name: string, parentNamespaceId?: BigInt) => BigInt;
    isValidNamespaceName: (name: string) => boolean;
    generateNamespacePath: (fullyQualifiedName: string) => array<BigInt>;
    generateMosaicAliasId: (fullyQualifiedName: string) => BigInt;
    TransactionFactory: typeof SymbolTransactionFactory.TransactionFactory;
    Address: typeof SymbolNetwork.Address;
    Network: typeof SymbolNetwork.Network;
    NetworkTimestamp: typeof SymbolNetwork.NetworkTimestamp;
    MerkleHashBuilder: typeof SymbolMerkleHashBuilder.MerkleHashBuilder;
    KeyPair: typeof SymbolKeyPair.KeyPair;
    Verifier: typeof SymbolKeyPair.Verifier;
    Amount: typeof SymbolModels.Amount;
    BlockDuration: typeof SymbolModels.BlockDuration;
    BlockFeeMultiplier: typeof SymbolModels.BlockFeeMultiplier;
    Difficulty: typeof SymbolModels.Difficulty;
    FinalizationEpoch: typeof SymbolModels.FinalizationEpoch;
    FinalizationPoint: typeof SymbolModels.FinalizationPoint;
    Height: typeof SymbolModels.Height;
    Importance: typeof SymbolModels.Importance;
    ImportanceHeight: typeof SymbolModels.ImportanceHeight;
    UnresolvedMosaicId: typeof SymbolModels.UnresolvedMosaicId;
    MosaicId: typeof SymbolModels.MosaicId;
    Timestamp: typeof SymbolModels.Timestamp;
    UnresolvedAddress: typeof SymbolModels.UnresolvedAddress;
    Hash256: typeof SymbolModels.Hash256;
    Hash512: typeof SymbolModels.Hash512;
    PublicKey: typeof SymbolModels.PublicKey;
    VotingPublicKey: typeof SymbolModels.VotingPublicKey;
    Signature: typeof SymbolModels.Signature;
    Mosaic: typeof SymbolModels.Mosaic;
    UnresolvedMosaic: typeof SymbolModels.UnresolvedMosaic;
    LinkAction: typeof SymbolModels.LinkAction;
    NetworkType: typeof SymbolModels.NetworkType;
    TransactionType: typeof SymbolModels.TransactionType;
    Transaction: typeof SymbolModels.Transaction;
    EmbeddedTransaction: typeof SymbolModels.EmbeddedTransaction;
    AccountKeyLinkTransaction: typeof SymbolModels.AccountKeyLinkTransaction;
    EmbeddedAccountKeyLinkTransaction: typeof SymbolModels.EmbeddedAccountKeyLinkTransaction;
    NodeKeyLinkTransaction: typeof SymbolModels.NodeKeyLinkTransaction;
    EmbeddedNodeKeyLinkTransaction: typeof SymbolModels.EmbeddedNodeKeyLinkTransaction;
    Cosignature: typeof SymbolModels.Cosignature;
    DetachedCosignature: typeof SymbolModels.DetachedCosignature;
    AggregateCompleteTransaction: typeof SymbolModels.AggregateCompleteTransaction;
    AggregateBondedTransaction: typeof SymbolModels.AggregateBondedTransaction;
    VotingKeyLinkTransaction: typeof SymbolModels.VotingKeyLinkTransaction;
    EmbeddedVotingKeyLinkTransaction: typeof SymbolModels.EmbeddedVotingKeyLinkTransaction;
    VrfKeyLinkTransaction: typeof SymbolModels.VrfKeyLinkTransaction;
    EmbeddedVrfKeyLinkTransaction: typeof SymbolModels.EmbeddedVrfKeyLinkTransaction;
    HashLockTransaction: typeof SymbolModels.HashLockTransaction;
    EmbeddedHashLockTransaction: typeof SymbolModels.EmbeddedHashLockTransaction;
    LockHashAlgorithm: typeof SymbolModels.LockHashAlgorithm;
    SecretLockTransaction: typeof SymbolModels.SecretLockTransaction;
    EmbeddedSecretLockTransaction: typeof SymbolModels.EmbeddedSecretLockTransaction;
    SecretProofTransaction: typeof SymbolModels.SecretProofTransaction;
    EmbeddedSecretProofTransaction: typeof SymbolModels.EmbeddedSecretProofTransaction;
    AccountMetadataTransaction: typeof SymbolModels.AccountMetadataTransaction;
    EmbeddedAccountMetadataTransaction: typeof SymbolModels.EmbeddedAccountMetadataTransaction;
    MosaicMetadataTransaction: typeof SymbolModels.MosaicMetadataTransaction;
    EmbeddedMosaicMetadataTransaction: typeof SymbolModels.EmbeddedMosaicMetadataTransaction;
    NamespaceId: typeof SymbolModels.NamespaceId;
    NamespaceRegistrationType: typeof SymbolModels.NamespaceRegistrationType;
    AliasAction: typeof SymbolModels.AliasAction;
    NamespaceMetadataTransaction: typeof SymbolModels.NamespaceMetadataTransaction;
    EmbeddedNamespaceMetadataTransaction: typeof SymbolModels.EmbeddedNamespaceMetadataTransaction;
    MosaicNonce: typeof SymbolModels.MosaicNonce;
    MosaicFlags: typeof SymbolModels.MosaicFlags;
    MosaicSupplyChangeAction: typeof SymbolModels.MosaicSupplyChangeAction;
    MosaicDefinitionTransaction: typeof SymbolModels.MosaicDefinitionTransaction;
    EmbeddedMosaicDefinitionTransaction: typeof SymbolModels.EmbeddedMosaicDefinitionTransaction;
    MosaicSupplyChangeTransaction: typeof SymbolModels.MosaicSupplyChangeTransaction;
    EmbeddedMosaicSupplyChangeTransaction: typeof SymbolModels.EmbeddedMosaicSupplyChangeTransaction;
    MosaicSupplyRevocationTransaction: typeof SymbolModels.MosaicSupplyRevocationTransaction;
    EmbeddedMosaicSupplyRevocationTransaction: typeof SymbolModels.EmbeddedMosaicSupplyRevocationTransaction;
    MultisigAccountModificationTransaction: typeof SymbolModels.MultisigAccountModificationTransaction;
    EmbeddedMultisigAccountModificationTransaction: typeof SymbolModels.EmbeddedMultisigAccountModificationTransaction;
    AddressAliasTransaction: typeof SymbolModels.AddressAliasTransaction;
    EmbeddedAddressAliasTransaction: typeof SymbolModels.EmbeddedAddressAliasTransaction;
    MosaicAliasTransaction: typeof SymbolModels.MosaicAliasTransaction;
    EmbeddedMosaicAliasTransaction: typeof SymbolModels.EmbeddedMosaicAliasTransaction;
    NamespaceRegistrationTransaction: typeof SymbolModels.NamespaceRegistrationTransaction;
    EmbeddedNamespaceRegistrationTransaction: typeof SymbolModels.EmbeddedNamespaceRegistrationTransaction;
    AccountRestrictionFlags: typeof SymbolModels.AccountRestrictionFlags;
    AccountAddressRestrictionTransaction: typeof SymbolModels.AccountAddressRestrictionTransaction;
    EmbeddedAccountAddressRestrictionTransaction: typeof SymbolModels.EmbeddedAccountAddressRestrictionTransaction;
    AccountMosaicRestrictionTransaction: typeof SymbolModels.AccountMosaicRestrictionTransaction;
    EmbeddedAccountMosaicRestrictionTransaction: typeof SymbolModels.EmbeddedAccountMosaicRestrictionTransaction;
    AccountOperationRestrictionTransaction: typeof SymbolModels.AccountOperationRestrictionTransaction;
    EmbeddedAccountOperationRestrictionTransaction: typeof SymbolModels.EmbeddedAccountOperationRestrictionTransaction;
    MosaicAddressRestrictionTransaction: typeof SymbolModels.MosaicAddressRestrictionTransaction;
    EmbeddedMosaicAddressRestrictionTransaction: typeof SymbolModels.EmbeddedMosaicAddressRestrictionTransaction;
    MosaicRestrictionKey: typeof SymbolModels.MosaicRestrictionKey;
    MosaicRestrictionType: typeof SymbolModels.MosaicRestrictionType;
    MosaicGlobalRestrictionTransaction: typeof SymbolModels.MosaicGlobalRestrictionTransaction;
    EmbeddedMosaicGlobalRestrictionTransaction: typeof SymbolModels.EmbeddedMosaicGlobalRestrictionTransaction;
    TransferTransaction: typeof SymbolModels.TransferTransaction;
    EmbeddedTransferTransaction: typeof SymbolModels.EmbeddedTransferTransaction;
    EmbeddedTransactionFactory: typeof SymbolModels.EmbeddedTransactionFactory;
};
export declare namespace utils {
    export { hexToUint8 };
    export { uint8ToHex };
}
export { BaseValue, Bip32, ByteArray, CryptoTypes, NetworkLocator };
