"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var BaseValue = require('./BaseValue').BaseValue;
var Bip32 = require('./Bip32').Bip32;
var ByteArray = require('./ByteArray').ByteArray;
var CryptoTypes = require('./CryptoTypes');
var NetworkLocator = require('./Network').NetworkLocator;
var NemFacade = require('./facade/NemFacade');
var SymbolFacade = require('./facade/SymbolFacade');
var NemKeyPair = require('./nem/KeyPair');
var NemNetwork = require('./nem/Network');
var NemTransactionFactory = require('./nem/TransactionFactory');
var NemModels = require('./nem/models');
var SymbolKeyPair = require('./symbol/KeyPair');
var SymbolMerkleHashBuilder = require('./symbol/MerkleHashBuilder');
var SymbolNetwork = require('./symbol/Network');
var SymbolTransactionFactory = require('./symbol/TransactionFactory');
var SymbolIdGenerator = require('./symbol/idGenerator');
var SymbolModels = require('./symbol/models');
var _a = require('./utils/converter'), hexToUint8 = _a.hexToUint8, uint8ToHex = _a.uint8ToHex;
module.exports = {
    BaseValue: BaseValue,
    Bip32: Bip32,
    ByteArray: ByteArray,
    CryptoTypes: CryptoTypes,
    NetworkLocator: NetworkLocator,
    facade: __assign(__assign({}, NemFacade), SymbolFacade),
    nem: __assign(__assign(__assign(__assign({}, NemModels), NemKeyPair), NemNetwork), NemTransactionFactory),
    symbol: __assign(__assign(__assign(__assign(__assign(__assign({}, SymbolModels), SymbolKeyPair), SymbolMerkleHashBuilder), SymbolNetwork), SymbolTransactionFactory), SymbolIdGenerator),
    utils: {
        hexToUint8: hexToUint8,
        uint8ToHex: uint8ToHex
    }
};
