"use strict";
/**
 * Buffer view.
 */
var BufferView = /** @class */ (function () {
    /**
     * Creates buffer view around buffer.
     * @param {Uint8Array} buffer Initial buffer view.
     */
    function BufferView(buffer) {
        this.buffer = buffer;
    }
    /**
     * Moves view right.
     * @param {number} size Amount of bytes to shift.
     */
    BufferView.prototype.shiftRight = function (size) {
        this.buffer = new Uint8Array(this.buffer.buffer, this.buffer.byteOffset + size, this.buffer.length - size);
    };
    /**
     * Returns new limited view.
     * @param {number} size Length in bytes.
     * @returns {Uint8Array} View limited to specified size.
     */
    BufferView.prototype.window = function (size) {
        if (size > this.buffer.length)
            throw RangeError("invalid shrink value: ".concat(size, " vs ").concat(this.buffer.length));
        return new Uint8Array(this.buffer.buffer, this.buffer.byteOffset, size);
    };
    /**
     * Shrinks view to specified size
     * @param {number} size New length in bytes.
     */
    BufferView.prototype.shrink = function (size) {
        this.buffer = this.window(size);
    };
    return BufferView;
}());
module.exports = { BufferView: BufferView };
