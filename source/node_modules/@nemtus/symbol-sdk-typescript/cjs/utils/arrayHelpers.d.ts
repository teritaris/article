declare function writeArrayImpl(output: any, elements: any, count: any, accessor?: null): void;
export declare function alignUp(size: number, alignment: number): number;
export declare function size(elements: array<object>, alignment?: number, skipLastElementPadding?: boolean): number;
export declare function readArray(bufferInput: Uint8Array, FactoryClass: type, accessor?: Function): array<object>;
export declare function readArrayCount(bufferInput: Uint8Array, FactoryClass: type, count: number, accessor?: Function): array<object>;
export declare function readVariableSizeElements(bufferInput: Uint8Array, FactoryClass: type, alignment: number, skipLastElementPadding?: boolean): array<object>;
export declare function writeArray(output: Writer, elements: array<object>, accessor?: Function): void;
export { writeArrayImpl as writeArrayCount };
export declare function writeVariableSizeElements(output: Writer, elements: array<object>, alignment: number, skipLastElementPadding?: boolean): void;
